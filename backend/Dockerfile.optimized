# Multi-stage build for optimized container size
FROM python:3.11-slim as builder

# Build argument for cache busting
ARG CACHEBUST=1

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements and install dependencies
COPY requirements-optimized.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements-optimized.txt && \
    pip install --no-cache-dir langchain==0.1.0 langchain-openai==0.0.2 langchain-community==0.0.10 && \
    pip list | grep -i langchain && echo "✅ langchain installed successfully" || echo "❌ Warning: langchain not found in pip list"

# Remove Python cache files to reduce size
RUN find /opt/venv -name "*.pyc" -delete && \
    find /opt/venv -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true && \
    find /opt/venv -name "*.pyo" -delete && \
    find /opt/venv -name "*.pyd" -delete

# Production stage
FROM python:3.11-slim as production

# Install only runtime system dependencies
RUN apt-get update && apt-get install -y \
    libgomp1 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Create non-root user
RUN useradd --create-home --shell /bin/bash appuser

# Set working directory
WORKDIR /app

# Copy application code (exclude unnecessary files)
COPY app/ ./app/
COPY alembic.ini .
COPY smartcards_ai.db .

# Copy SQL agent data (only essential files)
COPY app/data/ ./app/data/

# Create necessary directories
RUN mkdir -p uploads chroma_db && \
    chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Start application
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
